package main

import (
	"fmt"
	"net/http"
	"io/ioutil"
	"encoding/json"

	"bytes"
	"time"
)

type student struct {
	Id 		int 		`json:"id" xorm:"not null pk int 'id'"`
	Name 	string		`json:"name" xorm:"not null VARCHAR(100) 'sname'"`
	Gender 	int			`json:"gender" xorm:"not null int 'gender'"`
	Class	int			`json:"class" xorm:"not null int 'class'"`
}


func main() {

	url := "http://127.0.0.1:443/insert"

	//stu := student{
	//	Id 			:	56,
	//	Name		:	"aaa",
	//	Gender 		:	0,
	//	Class 		:	11,
	//}

	stu := make(map[string]interface{})
	stu["id"] = 156
	stu["name"] = "ahuang"
	stu["gender"] = 0
	stu["class"] = 11



	 bs, err := json.Marshal(stu)

	 //        fmt.Println(string(bs))
	 req := bytes.NewBuffer([]byte(bs))
	 //tmp := `{"id": 5,"name":"aaa","gender":"0","class":"11"}`
	 //req = bytes.NewBuffer([]byte(tmp))

	 request, err := http.NewRequest("POST", url, req)

	 if err != nil {
	 	fmt.Println(err.Error())
	 	return
	 }

	 request.Header.Set("Content-Type", "application/json;charset=UTF-8")

	 client := http.Client{}

	 resp, err := client.Do(request)

	 if err != nil {
	 	fmt.Println("请求错误")
	 }
	 time.Sleep( time.Second)

	 body, err := ioutil.ReadAll(resp.Body)

	 if err != nil {
	 	fmt.Println("响应错误")
	 }

	 fmt.Println(string(body))

	 fmt.Println(err)


	/*
	client := &http.Client{}

	req := `{"id": 5,"name":"aaa","gender":"0","class":"11"}`

	req_new := bytes.NewBuffer([]byte(req))
	request, _ := http.NewRequest("POST", "local:7000/insert", req_new)
	request.Header.Set("Content-type", "application/json")
	response, _ := client.Do(request)
	if response.StatusCode == 200 {
		body, _ := ioutil.ReadAll(response.Body)
		fmt.Println(string(body))
	}
	*/
}
